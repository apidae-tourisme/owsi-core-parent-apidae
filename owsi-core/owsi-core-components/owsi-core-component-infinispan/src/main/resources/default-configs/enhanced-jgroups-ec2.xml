<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:org:jgroups"
        xsi:schemaLocation="urn:org:jgroups http://www.jgroups.org/schema/jgroups-4.2.xsd">

	 <!-- TCP - The transport protocol, uses TCP (from TCP/IP) to send unicast and multicast messages. 
	 	In the latter case, it sends multiple unicast messages. -->
     <TCP
          bind_addr="${jgroups.bind.address:NON_LOOPBACK}"
          bind_port="${jgroups.bind.port:7800}"
          thread_naming_pattern="pl"
          recv_buf_size="${tcp.recv_buf_size:5M}"
          send_buf_size="${tcp.send_buf_size:5M}"
          sock_conn_timeout="300"

          enable_diagnostics="false"
          
          linger="${jgroups.tcp.linger:-1}"
          
          bundler_type="${jgroups.bundler.type:transfer-queue}"
          max_bundle_size="${jgroups.bundler.max_size:64000}"
          
          thread_pool.enabled="true"
          thread_pool.min_threads="${jgroups.thread_pool.min_threads:2}"
          thread_pool.max_threads="${jgroups.thread_pool.max_threads:30}"
          thread_pool.keep_alive_time="60000"
     />
	
	<!-- aws.S3_PING - S3_PING protocol which uses an S3 bucket to let the nodes communicate their IP addresses. -->	
     <aws.S3_PING
          region_name="${jgroups.s3.region_name}"
          bucket_name="${jgroups.s3.bucket_name}"
          bucket_prefix="${jgroups.s3.bucket_prefix}"
     />

	<!-- MERGE3 - Will merge sub-clusters back into one cluster, kicks in after a network partition healed. -->
     <MERGE3
          min_interval="10000"
          max_interval="30000"
     />

	<!-- FD_SOCK - Failure detection based on sockets (in a ring form between members). Generates notification if a member fails. -->
     <FD_SOCK/>
     
     <!-- FD_ALL - Failure detection based on heartbeat are-you-alive messages. Generates notification if a member fails  --> 
     <!-- Suspect node `timeout` to `timeout + timeout_check_interval` millis after the last heartbeat -->
     <FD_ALL 
          timeout="30000" 
          interval="5000"
          timeout_check_interval="1000" 
     />
     	
     <!-- VERIFY_SUSPECT - Double-checks whether a suspected member is really dead, otherwise the suspicion generated 
     	from protocol below is discarded  -->
     <VERIFY_SUSPECT timeout="1500" stats="false"/>
     
     <!-- pbcast.NAKACK - Ensures (a) message reliability and (b) FIFO. Message reliability guarantees that a message will 
     	be received. If not, the receiver(s) will request retransmission. FIFO guarantees that all messages from sender 
     	P will be received in the order P sent them  -->
     <pbcast.NAKACK2 
          use_mcast_xmit="false"
          discard_delivered_msgs="true"
          stats="false"  
     />

	 <!-- UNICAST - Same as NAKACK for unicast messages: messages from sender P will not be lost (retransmission if 
	 	necessary) and will be in FIFO order (conceptually the same as TCP in TCP/IP)  -->
     <UNICAST3 conn_close_timeout="5000"
          xmit_interval="200"
          xmit_table_num_rows="50"
          xmit_table_msgs_per_row="1024"
          xmit_table_max_compaction_time="30000"
     />

	 <!-- pbcast.STABLE - Deletes messages that have been seen by all members (distributed message garbage collection)  -->
     <pbcast.STABLE desired_avg_gossip="50000" max_bytes="4M" />

	 <!-- pbcast.GMS - Membership protocol. Responsible for joining/leaving members and installing new views.  -->
     <pbcast.GMS print_local_addr="false" join_timeout="${jgroups.join_timeout:2000}" />

	 <!-- UFC - Unicast Flow Control. Provides flow control between 2 members. -->
     <UFC max_credits="${jgroups.max_credits:10M}" min_threshold="0.40" />
     <!-- MFC - Multicast Flow Control. Provides flow control between a sender and all cluster members. -->
     <MFC max_credits="${jgroups.max_credits:10M}" min_threshold="0.40" />
     <!-- FRAG - Fragments large messages into smaller ones and reassembles them back at the receiver side. 
     	For both multicast and unicast messages -->
     <FRAG3 />
</config>